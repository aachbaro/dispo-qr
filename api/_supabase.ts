// api/_supabase.ts
// -------------------------------------------------------------
// Client Supabase (admin)
// -------------------------------------------------------------
//
// üìå Description :
//   - Initialise un client Supabase avec la cl√© service role
//   - Utilis√© dans toutes les routes API (auth, entreprises, etc.)
//
// ‚ö†Ô∏è Attention :
//   - Ne jamais exposer la cl√© SERVICE_ROLE c√¥t√© frontend
//   - PersistSession et autoRefreshToken d√©sactiv√©s (mode backend)
// -------------------------------------------------------------

import { createClient } from "@supabase/supabase-js";

// ----------------------
// Env vars
// ----------------------
const url = process.env.SUPABASE_URL ?? "";
const serviceRole = process.env.SUPABASE_SERVICE_ROLE_KEY ?? "";

if (!url) throw new Error("‚ùå [supabaseAdmin] SUPABASE_URL manquant");
if (!serviceRole) {
  throw new Error("‚ùå [supabaseAdmin] SUPABASE_SERVICE_ROLE_KEY manquant");
}

// ----------------------
// Client admin
// ----------------------
export const supabaseAdmin = createClient(url, serviceRole, {
  auth: {
    persistSession: false,
    autoRefreshToken: false,
  },
});
